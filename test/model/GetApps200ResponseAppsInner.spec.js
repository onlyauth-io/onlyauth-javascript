/**
 * OnlyAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Onlyauth);
  }
}(this, function(expect, Onlyauth) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Onlyauth.GetApps200ResponseAppsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetApps200ResponseAppsInner', function() {
    it('should create an instance of GetApps200ResponseAppsInner', function() {
      // uncomment below and update the code to test GetApps200ResponseAppsInner
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be.a(Onlyauth.GetApps200ResponseAppsInner);
    });

    it('should have the property sandboxMode (base name: "sandbox_mode")', function() {
      // uncomment below and update the code to test the property sandboxMode
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property allowSmsChannel (base name: "allow_sms_channel")', function() {
      // uncomment below and update the code to test the property allowSmsChannel
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property friendlyName (base name: "friendly_name")', function() {
      // uncomment below and update the code to test the property friendlyName
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property icon (base name: "icon")', function() {
      // uncomment below and update the code to test the property icon
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property allowTotpChannel (base name: "allow_totp_channel")', function() {
      // uncomment below and update the code to test the property allowTotpChannel
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property webauthnRedirectAllowed (base name: "webauthn_redirect_allowed")', function() {
      // uncomment below and update the code to test the property webauthnRedirectAllowed
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property appDomain (base name: "app_domain")', function() {
      // uncomment below and update the code to test the property appDomain
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property webauthnEnabled (base name: "webauthn_enabled")', function() {
      // uncomment below and update the code to test the property webauthnEnabled
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property supportedFactors (base name: "supported_factors")', function() {
      // uncomment below and update the code to test the property supportedFactors
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

    it('should have the property webauthEnabled (base name: "webauth_enabled")', function() {
      // uncomment below and update the code to test the property webauthEnabled
      //var instance = new Onlyauth.GetApps200ResponseAppsInner();
      //expect(instance).to.be();
    });

  });

}));
