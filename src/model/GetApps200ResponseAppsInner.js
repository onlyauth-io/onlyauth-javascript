/**
 * OnlyAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetApps200ResponseAppsInner model module.
 * @module model/GetApps200ResponseAppsInner
 * @version 0.1.2
 */
class GetApps200ResponseAppsInner {
    /**
     * Constructs a new <code>GetApps200ResponseAppsInner</code>.
     * @alias module:model/GetApps200ResponseAppsInner
     * @param sandboxMode {Boolean} Indicates if the app is in sandbox mode
     * @param allowSmsChannel {Boolean} Indicates if SMS channel is allowed for guests
     * @param icon {String} URL to the app's icon
     * @param allowTotpChannel {Boolean} Indicates if TOTP channel is allowed for guests
     * @param enabled {Number} Indicates if the app is enabled
     * @param appDomain {String} Domain of the app
     * @param webauthnEnabled {Boolean} Indicates if WebAuthn is enabled
     * @param id {String} Uuid of the app (APPX-XXX)
     */
    constructor(sandboxMode, allowSmsChannel, icon, allowTotpChannel, enabled, appDomain, webauthnEnabled, id) { 
        
        GetApps200ResponseAppsInner.initialize(this, sandboxMode, allowSmsChannel, icon, allowTotpChannel, enabled, appDomain, webauthnEnabled, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sandboxMode, allowSmsChannel, icon, allowTotpChannel, enabled, appDomain, webauthnEnabled, id) { 
        obj['sandbox_mode'] = sandboxMode;
        obj['allow_sms_channel'] = allowSmsChannel;
        obj['icon'] = icon;
        obj['allow_totp_channel'] = allowTotpChannel;
        obj['enabled'] = enabled;
        obj['app_domain'] = appDomain;
        obj['webauthn_enabled'] = webauthnEnabled;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>GetApps200ResponseAppsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetApps200ResponseAppsInner} obj Optional instance to populate.
     * @return {module:model/GetApps200ResponseAppsInner} The populated <code>GetApps200ResponseAppsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetApps200ResponseAppsInner();

            if (data.hasOwnProperty('sandbox_mode')) {
                obj['sandbox_mode'] = ApiClient.convertToType(data['sandbox_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_sms_channel')) {
                obj['allow_sms_channel'] = ApiClient.convertToType(data['allow_sms_channel'], 'Boolean');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('allow_totp_channel')) {
                obj['allow_totp_channel'] = ApiClient.convertToType(data['allow_totp_channel'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Number');
            }
            if (data.hasOwnProperty('webauthn_redirect_allowed')) {
                obj['webauthn_redirect_allowed'] = ApiClient.convertToType(data['webauthn_redirect_allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('app_domain')) {
                obj['app_domain'] = ApiClient.convertToType(data['app_domain'], 'String');
            }
            if (data.hasOwnProperty('webauthn_enabled')) {
                obj['webauthn_enabled'] = ApiClient.convertToType(data['webauthn_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('supported_factors')) {
                obj['supported_factors'] = ApiClient.convertToType(data['supported_factors'], 'String');
            }
            if (data.hasOwnProperty('webauth_enabled')) {
                obj['webauth_enabled'] = ApiClient.convertToType(data['webauth_enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetApps200ResponseAppsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetApps200ResponseAppsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetApps200ResponseAppsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // ensure the json data is a string
        if (data['app_domain'] && !(typeof data['app_domain'] === 'string' || data['app_domain'] instanceof String)) {
            throw new Error("Expected the field `app_domain` to be a primitive type in the JSON string but got " + data['app_domain']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['supported_factors'] && !(typeof data['supported_factors'] === 'string' || data['supported_factors'] instanceof String)) {
            throw new Error("Expected the field `supported_factors` to be a primitive type in the JSON string but got " + data['supported_factors']);
        }

        return true;
    }


}

GetApps200ResponseAppsInner.RequiredProperties = ["sandbox_mode", "allow_sms_channel", "icon", "allow_totp_channel", "enabled", "app_domain", "webauthn_enabled", "id"];

/**
 * Indicates if the app is in sandbox mode
 * @member {Boolean} sandbox_mode
 */
GetApps200ResponseAppsInner.prototype['sandbox_mode'] = undefined;

/**
 * Indicates if SMS channel is allowed for guests
 * @member {Boolean} allow_sms_channel
 */
GetApps200ResponseAppsInner.prototype['allow_sms_channel'] = undefined;

/**
 * Client identifier (CLNT-XXX)
 * @member {String} client_id
 */
GetApps200ResponseAppsInner.prototype['client_id'] = undefined;

/**
 * Friendly name of the app
 * @member {String} friendly_name
 */
GetApps200ResponseAppsInner.prototype['friendly_name'] = undefined;

/**
 * URL to the app's icon
 * @member {String} icon
 */
GetApps200ResponseAppsInner.prototype['icon'] = undefined;

/**
 * Indicates if TOTP channel is allowed for guests
 * @member {Boolean} allow_totp_channel
 */
GetApps200ResponseAppsInner.prototype['allow_totp_channel'] = undefined;

/**
 * Indicates if the app is enabled
 * @member {Number} enabled
 */
GetApps200ResponseAppsInner.prototype['enabled'] = undefined;

/**
 * Indicates if WebAuthn redirect is allowed when webauthn_enabled is set to true
 * @member {Boolean} webauthn_redirect_allowed
 */
GetApps200ResponseAppsInner.prototype['webauthn_redirect_allowed'] = undefined;

/**
 * Domain of the app
 * @member {String} app_domain
 */
GetApps200ResponseAppsInner.prototype['app_domain'] = undefined;

/**
 * Indicates if WebAuthn is enabled
 * @member {Boolean} webauthn_enabled
 */
GetApps200ResponseAppsInner.prototype['webauthn_enabled'] = undefined;

/**
 * Uuid of the app (APPX-XXX)
 * @member {String} id
 */
GetApps200ResponseAppsInner.prototype['id'] = undefined;

/**
 * Supported factors for the app
 * @member {String} supported_factors
 */
GetApps200ResponseAppsInner.prototype['supported_factors'] = undefined;

/**
 * Indicates if WebAuth is enabled
 * @member {Boolean} webauth_enabled
 */
GetApps200ResponseAppsInner.prototype['webauth_enabled'] = undefined;






export default GetApps200ResponseAppsInner;

