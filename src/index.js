/**
 * OnlyAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CreateAccessToken200Response from './model/CreateAccessToken200Response';
import DeleteApp200Response from './model/DeleteApp200Response';
import ErrorResponse from './model/ErrorResponse';
import GetApps200Response from './model/GetApps200Response';
import GetApps200ResponseAppsInner from './model/GetApps200ResponseAppsInner';
import NewApp200Response from './model/NewApp200Response';
import ValidateSuccessToken200Response from './model/ValidateSuccessToken200Response';
import AppsApi from './api/AppsApi';
import AuthenticationApi from './api/AuthenticationApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Onlyauth = require('index'); // See note below*.
* var xxxSvc = new Onlyauth.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Onlyauth.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Onlyauth.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Onlyauth.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CreateAccessToken200Response model constructor.
     * @property {module:model/CreateAccessToken200Response}
     */
    CreateAccessToken200Response,

    /**
     * The DeleteApp200Response model constructor.
     * @property {module:model/DeleteApp200Response}
     */
    DeleteApp200Response,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The GetApps200Response model constructor.
     * @property {module:model/GetApps200Response}
     */
    GetApps200Response,

    /**
     * The GetApps200ResponseAppsInner model constructor.
     * @property {module:model/GetApps200ResponseAppsInner}
     */
    GetApps200ResponseAppsInner,

    /**
     * The NewApp200Response model constructor.
     * @property {module:model/NewApp200Response}
     */
    NewApp200Response,

    /**
     * The ValidateSuccessToken200Response model constructor.
     * @property {module:model/ValidateSuccessToken200Response}
     */
    ValidateSuccessToken200Response,

    /**
    * The AppsApi service constructor.
    * @property {module:api/AppsApi}
    */
    AppsApi,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi
};
